[top 명령어]

- 시스템 모니터링 및 문제 해결에 유용한 도구로 시스템의 성능 및 프로세스 활동에 대한 정보를 실시간으로 확인할 수 있다.

$ top
  
  top - 23:02:01 up 16:16,  1 user,  load average: 0.00, 0.00, 0.00
  Tasks:  92 total,   1 running,  49 sleeping,   0 stopped,   0 zombie
  %Cpu(s):  0.0 us,  0.0 sy,  0.0 ni, 99.7 id,  0.0 wa,  0.0 hi,  0.0 si,  0.3 st
  KiB Mem :   975588 total,   280032 free,    84488 used,   611068 buff/cache
  KiB Swap:        0 total,        0 free,        0 used.   745584 avail Mem 


1) top - 22:58:37: 현재 시간을 나타내며, "top" 명령이 실행된 시간입니다. 시스템 상태 및 프로세스 활동의 현재 스냅샷을 보고하는 시간입니다.

2)  up 16:13: 시스템이 부팅된 시간을 나타냅니다.

3)  1 user: 현재 시스템에 로그인한 사용자 수를 나타냅니다.

4)  load average: 0.00, 0.00, 0.00: 

   - 시스템의 부하 평균을 나타냅니다. 
   - 이 값은 1분, 5분 및 15분 동안의 평균 부하를 나타냅니다.
   - 부하 평균은 시스템에 대기 중인 작업이 얼마나 많은지를 나타냅니다. 


"Tasks" 부분은 "top" 명령어의 결과에서 현재 실행 중인 프로세스에 대한 정보를 제공합니다

5) 91 total: 91 total: 현재 시스템에서 실행 중인 총 프로세스의 수입니다. 시스템에서 동작하는 모든 프로세스의 수를 나타냅니다.

6) 1 running: 현재 실행 중인 프로세스의 수입니다. 이것은 현재 CPU에서 활성화되어 있는 프로세스 수를 나타냅니다.

7) 49 sleeping: 현재 대기 중인 프로세스의 수입니다. 이것은 현재 실행 중이지 않고, 대기 중인 프로세스 수를 나타냅니다. 
                대기 중인 프로세스는 실행을 위해 대기하고 있는 상태이며, 예를 들어 어떤 이벤트를 기다리거나 다른 프로세스의 완료를 기다릴 수 있습니다.

8) 0 stopped: 중지된 프로세스의 수입니다. 중지된 프로세스는 일시적으로 일시정지된 상태로, 사용자의 명령에 따라 중단될 수 있습니다.
    
    - kill -15 [프로세스ID]  # SIGTERM을 사용하여 종료 요청
    
    - kill -9 [프로세스ID]   # SIGKILL을 사용하여 강제 종료  

9) 0 zombie: 좀비 프로세스의 수입니다. 좀비 프로세스는 이미 종료된 프로세스이지만 부모 프로세스가 종료 상태를 확인하지 않아 자원을 해제하지 못한 프로세스입니다. 
             좀비 프로세스는 시스템 리소스를 소비하므로 관리해야 합니다.


%Cpu(s): 이 부분은 CPU 사용률에 대한 요약 정보를 시작합니다.

10) 0.3 us: 사용자 모드에서 CPU 사용량을 나타냅니다. "us"는 "user"의 약자로, 사용자가 실행하는 프로세스가 CPU를 얼마나 사용하고 있는지를 나타냅니다. 이 경우, 사용자 모드에서 CPU 사용률이 0.3%인 것을 의미합니다.

11) 0.0 sy: 시스템 모드에서 CPU 사용량을 나타냅니다. "sy"는 "system"의 약자로, 커널 또는 시스템 루틴이 CPU를 사용하는 비율을 나타냅니다. 이 경우, 시스템 모드에서 CPU 사용률이 0.0%인 것을 의미합니다.

12) 0.0 ni: Nice 모드에서 CPU 사용량을 나타냅니다. "ni"는 "nice"의 약자로, 우선순위가 낮은 프로세스가 CPU를 사용하는 비율을 나타냅니다. 이 경우, Nice 모드에서 CPU 사용률이 0.0%인 것을 의미합니다.

13) 99.7 id: CPU가 아이들(idle) 상태인 비율을 나타냅니다. "id"는 CPU가 얼마나 유휴 상태에 있는지를 나타내며, 이 비율이 높을수록 CPU가 대부분의 시간을 대기 상태로 보내고 있다는 것을 의미합니다. 
             이 경우, CPU가 99.7%의 시간을 아이들 상태로 보내고 있어서 대부분의 자원이 유휴 상태에 있음을 나타냅니다.

14) 0.0 wa: I/O 대기 시간에서 발생하는 CPU 사용률을 나타냅니다. "wa"는 "wait"의 약자로, 입출력 작업을 기다리는 동안 CPU가 사용되는 비율을 나타냅니다. 이 경우, I/O 대기 시간에서 CPU 사용률이 0.0%인 것을 의미합니다.

15) 0.0 hi: 하드웨어 인터럽트에서 발생하는 CPU 사용률을 나타냅니다. "hi"는 "hardware interrupt"의 약자로, 하드웨어 장치의 인터럽트 처리를 위해 CPU가 사용되는 비율을 나타냅니다. 이 경우, 하드웨어 인터럽트에서 CPU 사용률이 0.0%인 것을 의미합니다.

16) 0.0 si: 소프트웨어 인터럽트에서 발생하는 CPU 사용률을 나타냅니다. "si"는 "software interrupt"의 약자로, 소프트웨어 인터럽트 처리를 위해 CPU가 사용되는 비율을 나타냅니다. 이 경우, 소프트웨어 인터럽트에서 CPU 사용률이 0.0%인 것을 의미합니다.

17) 0.0 st: 가상화 환경에서 발생하는 CPU 스틸(steal) 시간을 나타냅니다. "st"는 CPU 가상화 환경에서 다른 가상 머신과 CPU를 공유하는 경우 발생하는 비율을 나타냅니다. 이 경우, 가상화 환경에서 CPU 스틸 시간이 0.0%인 것을 의미합니


[하드웨어 인터럽트]

- 컴퓨터 시스템에서 발생하는 중요한 이벤트나 신호로, 하드웨어 장치나 컴퓨터의 하드웨어 구성 요소에 의해 생성됩니다. 

- 하드웨어 인터럽트는 CPU에게 어떤 일이 발생했음을 알리고, CPU는 해당 이벤트에 대응하여 필요한 작업을 수행하게 됩니다.

[예시]

1) 디스크 컨트롤러 인터럽트 (Disk Controller Interrupt)
   - 디스크 드라이브나 저장 장치의 하드웨어 컨트롤러가 데이터의 읽기 또는 쓰기 완료와 같은 작업을 완료하면 인터럽트를 발생시킵니다. 
   - 이를 통해 데이터 입출력 작업이 완료되었음을 운영 체제나 프로그램에 알릴 수 있습니다.


[소트프웨어 인터럽트]

- 소프트웨어 인터럽트는 하드웨어 인터럽트와 유사하지만, 주로 소프트웨어 프로그램이나 운영 체제 내부에서 발생하는 이벤트나 신호를 나타냅니다. 
- 소프트웨어 인터럽트는 일반적으로 시스템의 상태 변화 또는 특정 이벤트에 대한 응답으로 발생하며, 이러한 인터럽트를 사용하여 CPU는 특정 작업을 수행하거나 서비스를 처리합니다.
- 소프트웨어 인터럽트는 주로 운영 체제와 응용 프로그램 사이의 상호 작용에 사용됩니다. 
- 응용 프로그램은 운영 체제의 기능을 호출하거나 예외 상황을 처리하기 위해 소프트웨어 인터럽트를 사용합니다. 

[예시]

1) 시스템 호출 인터럽트 (System Call Interrupt): 
   - 프로세스가 운영 체제의 기능을 사용하려고 할 때, 예를 들어 파일을 읽거나 쓰는 것과 같은 작업을 수행하려면 시스템 호출을 실행합니다. 
   - 이때 CPU는 시스템 호출을 처리하기 위한 소프트웨어 인터럽트를 발생시키고, 운영 체제는 해당 요청을 수행합니다.

2) 프로그램 예외 인터럽트 (Program Exception Interrupt): 
   - 프로그램이 실행 중에 오류 상황에 직면하면 소프트웨어 인터럽트를 발생시킵니다. 
   - 이는 예외 처리(exception handling)를 통해 프로그램의 안정성을 유지하고 오류를 처리하는 데 사용됩니다.


이 출력은 시스템의 메모리 사용량에 대한 정보를 나타냅니다. 

18) KiB Mem: 이 항목은 시스템의 메모리(RAM)에 대한 요약 정보를 시작합니다.

19) 975588 total: 시스템에 총 설치된 메모리(RAM)의 양을 키비바이트(KiB) 단위로 나타냅니다. 여기서는 총 975,588 KiB의 메모리가 시스템에 설치되어 있음을 의미합니다. 이 값은 시스템이 가질 수 있는 총 물리적 메모리 양입니다.

20) 280032 free: 현재 사용 가능한(비사용 중인) 메모리(RAM)의 양을 키비바이트(KiB) 단위로 나타냅니다. 여기서는 280,032 KiB의 메모리가 사용 가능하며, 현재 시스템이 물리적으로 비사용 중인 메모리 양을 나타냅니다.

21) 84440 used: 현재 사용 중인 메모리(RAM)의 양을 키비바이트(KiB) 단위로 나타냅니다. 여기서는 84,440 KiB의 메모리가 사용 중입니다. 이는 현재 실행 중인 프로세스 및 운영 체제가 사용하는 메모리 양을 나타냅니다.

22) 611116 buff/cache: 버퍼와 캐시로 사용되는 메모리의 양을 키비바이트(KiB) 단위로 나타냅니다. 버퍼와 캐시는 파일 시스템 및 디스크 작업에서 성능 향상을 위해 사용되는 메모리 공간입니다.
                       이 경우, 611,116 KiB의 메모리가 버퍼 및 캐시로 사용되고 있음을 나타냅니다.


이 출력은 시스템의 스왑(Swap) 공간 및 사용 가능한 물리적 메모리(RAM)에 대한 정보를 나타냅니다. 스왑 공간은 물리적 메모리가 부족한 경우에 디스크 공간을 사용하여 메모리 확장을 지원하는데 사용됩니다.

23) KiB Swap: 이 항목은 시스템의 스왑 공간에 대한 요약 정보를 시작합니다.

24) 0 total: 시스템에 총 설치된 스왑 공간의 양을 키비바이트(KiB) 단위로 나타냅니다. 여기서는 총 0 KiB의 스왑 공간이 시스템에 설치되어 있음을 의미합니다. 즉, 이 시스템은 스왑 공간을 가지고 있지 않습니다.

25) 0 free: 현재 사용 가능한(비사용 중인) 스왑 공간의 양을 키비바이트(KiB) 단위로 나타냅니다. 여기서는 0 KiB의 스왑 공간이 사용 가능하며, 스왑 공간이 전혀 사용 가능하지 않음을 나타냅니다.

26) 0 used: 현재 사용 중인 스왑 공간의 양을 키비바이트(KiB) 단위로 나타냅니다. 여기서는 0 KiB의 스왑 공간이 사용 중이며, 스왑 공간이 전혀 사용되지 않음을 나타냅니다.

27) 746644 avail Mem: 사용 가능한 물리적 메모리(RAM)의 양을 키비바이트(KiB) 단위로 나타냅니다. 여기서는 746,644 KiB의 물리적 메모리가 사용 가능하며, 현재 시스템이 사용할 수 있는 물리적 메모리의 양을 나타냅니다.

  



  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND                                                                                                                  
===========================================================================================                                                                                            
    1 root      20   0  123504   5476   3952 S  0.0  0.6   0:10.13 systemd                                                                                                                  
    2 root      20   0       0      0      0 S  0.0  0.0   0:00.00 kthreadd                                                                                                                 
    3 root       0 -20       0      0      0 I  0.0  0.0   0:00.00 rcu_gp                                                                                                                   
    4 root       0 -20       0      0      0 I  0.0  0.0   0:00.00 rcu_par_gp       


- PID: 프로세스의 고유한 식별자인 프로세스 ID를 나타냅니다.

- USER: 해당 프로세스를 실행한 사용자를 나타냅니다.

- PR: 프로세스의 우선순위를 나타내며, 일반적으로 "NI" 값과 함께 사용됩니다.

- NI: 프로세스의 우선순위를 나타내는 "Nice" 값을 나타냅니다. "Nice" 값이 음수면 우선순위가 높아지고, 양수면 우선순위가 낮아집니다.

- VIRT: 가상 메모리 사용량을 키비바이트(KiB) 단위로 나타냅니다. 프로세스가 사용할 수 있는 모든 메모리 영역을 포함한 가상 메모리의 크기입니다.

- RES: 실제 물리적 메모리(RAM)에서 사용되는 메모리 양을 키비바이트(KiB) 단위로 나타냅니다. 이 값은 프로세스가 실제로 사용 중인 실제 메모리 양을 나타냅니다.

- SHR: 공유 메모리의 크기를 키비바이트(KiB) 단위로 나타냅니다. 여러 프로세스가 공유 메모리를 사용할 때 이 값이 증가합니다.

- S: 프로세스의 현재 상태를 나타냅니다. 가능한 값으로 "R" (실행 중), "S" (대기 중), "D" (대기 중인 슬립 상태), "Z" (좀비 상태) 등이 있습니다.

- %CPU: CPU 사용률을 나타냅니다. 이 값은 CPU 사용률을 백분율로 표시합니다. 현재 프로세스가 CPU를 얼마나 사용하고 있는지를 나타냅니다.

- %MEM: 메모리 사용률을 나타냅니다. 이 값은 메모리 사용률을 백분율로 표시합니다. 현재 프로세스가 시스템 메모리 중 얼마나 사용하고 있는지를 나타냅니다.

- TIME+: 프로세스가 실행된 총 시간을 나타냅니다.

- COMMAND: 실행 중인 프로세스의 명령어나 프로그램 이름을 나타냅니다.









