쉘의 동작원리

- 리눅스와 유닉스 시스템에서 쉘(shell)은 사용자와 운영 체제 커널 간의 인터페이스 역할을 합니다. (커뮤니케이션 담당)

1) 사용자 입력 수신: 사용자가 키보드를 통해 명령을 입력하면, 쉘은 이 입력을 읽어와서 처리합니다. 사용자 입력은 쉘 프로세스에게 전달됩니다.

2) 명령 해석과 실행: 쉘은 입력된 명령을 해석하고 실행합니다. 이것은 사용자가 입력한 명령어 라인을 파싱하고, 해당 명령어를 실행하기 위해 필요한 시스템 호출(system calls)을 수행합니다.

3) 프로세스 관리: 명령이 실행될 때, 쉘은 새로운 프로세스를 생성합니다. 이 프로세스는 사용자가 입력한 명령 또는 스크립트를 실행하는 역할을 합니다. 쉘은 이러한 프로세스의 상태를 관리하고, 종료되면 해당 결과와 상태를 사용자에게 반환합니다.

4) 환경 변수 및 경로 관리: 쉘은 환경 변수(environment variables)를 관리하고, 현재 사용자의 환경을 설정합니다. 또한 실행 가능한 프로그램을 찾기 위해 경로(path)를 관리하며, 명령을 실행할 때 필요한 실행 파일을 찾습니다.

5) 입출력 리다이렉션과 파이프: 쉘은 명령의 입출력을 관리합니다. 사용자는 명령의 결과를 파일로 저장하거나, 여러 명령을 파이프(|)로 연결하여 데이터를 전달할 수 있습니다. 쉘은 이러한 입출력 리다이렉션과 파이프를 관리하여 명령어 간의 데이터 흐름을 제어합니다.

6) 변수 및 제어 구조 처리: 쉘은 스크립트에서 변수를 선언하고 사용하며, 조건문과 루프와 같은 제어 구조를 처리합니다. 이를 통해 스크립트에서 조건부 로직과 반복 작업을 수행할 수 있습니다.

7) 대화식 및 스크립트 모드: 쉘은 대화식 모드와 스크립트 모드를 지원합니다. 대화식 모드에서는 사용자가 직접 명령을 입력하고 상호작용할 수 있으며, 스크립트 모드에서는 미리 작성된 스크립트 파일을 실행할 수 있습니다.
