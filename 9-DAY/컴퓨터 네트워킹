[컴퓨터 네트워킹이란]
  
  - 컴퓨터나 다른 디지털 기기를 연결하여  정보를 주고받을 수 있는 통신 시스템을 구축하는 기술과 분야를 가리킵니다.   
    이러한 네트워크는 서로 다른 컴퓨터나 기기 간에 데이터를 공유하고 리소스를 공유합니다.



[네트워크]

  - Net + Work 합성어  
  - 그물망 처럼 서로 연결된 통신망을 이용하여 컴퓨터간 데이터를 이동할 수 형태로 간단히 말해 정보 공유를 목적으로 컴퓨터와 컴퓨터가 연결되어 형성된 망  
  - 이러한 네트워크 등장으로 인해 전세계를 하나로 묶어 거리와 무관하게 실시간으로 정보를 주고 받을 수 있게 되었고, 일상 생활 속에서 네트워크 자원을 활용할 수 있게 되었습니다. (온라인뱅킹, 게임, 쇼핑몰)
    


[컴퓨터 네트워킹의 주요 목표]

  - 자원 공유: 네트워크를 통해 프린터, 파일, 데이터베이스 등과 같은 자원을 여러 사용자 또는 기기 간에 공유할 수 있습니다.
  - 데이터 전송: 다른 컴퓨터나 기기로 데이터를 전송하고 공유할 수 있습니다. 이로써 이메일, 파일 전송, 웹 브라우징 등이 가능해집니다.
  - 효율성: 네트워크를 통해 데이터와 리소스를 효율적으로 사용하고 관리할 수 있습니다.
  - 원격 액세스: 원격지에서 다른 컴퓨터나 서버에 접속하여 작업을 수행할 수 있습니다.



Host란

  - 네트워크에 연결된 장치나 컴퓨터를 가리킵니다.
  
  1) IP 주소  
  2) 네트워크 인터페이스 : 호스트에는 하나 이상의 네트워크 인터페이스(네트워크 카드 또는 어댑터)가 있으며 이를 통해 네트워크에 연결됩니다.  
  3) 호스트 이름 : 도메인 이름  
  4) 서비스 제공 : 호스트는 네트워크를 통해 다양한 서비스를 제공할 수 있습니다. (웹서버, 파일서버, 메일 서버)




[네트워크 장비]

  - 네트워크는 어떻게 구성될까요>
  
  
  1) NIC (Network Interface Card) : 랜카드, 이더넷 카드, 네트워크 어댑터
   
     - 컴퓨터에 장착되어 컴퓨터나 다른 네트워크 장치간에 통신을 수행할 수 있도록 도와주는 하드웨어 장치입니다.  
     - 랜카드는 논리 주소인 IP 주소와 물리 주소인 MAC 주소를 사용하여 네트워크에서 데이터를 송수신하고, 데이터 패킷을 목적지에 전달합니다.
  
  
  2) 스위치 (Switch)
  
     - 동일한 네트워크에 연결된 디바이스 간의 통신을 관리합니다. 주로 LAN 내부에서 작동하며, 컴퓨터, 프린터, 서버 등과 같은 장치 간의 통신을 제공합니다.
  
  
       스위칭이란?
    
         - 네트워크에서 데이터 패킷을 목적지 디바이스로 전송하는 방식을 의미합니다.
   
  
          1) MAC 주소를 기반으로 스위칭
      
            - 스위치는 데이터 패킷을 목적지 MAC(Media Access Control) 주소를 기반으로 전송합니다. 각 네트워크 디바이스(컴퓨터, 프린터, 서버 등)는 고유한 MAC 주소를 가지고 있습니다. 
        
          2) MAC 주소 테이블
        
            - 스위치 내부에는 MAC 주소 테이블이 있습니다. 이 테이블은 스위치 포트와 해당 포트에 연결된 디바이스의 MAC 주소 간의 매핑 정보를 저장합니다.
            - 초기에는 MAC 주소 테이블이 비어있으며, 스위치는 데이터 패킷을 모든 포트로 브로드캐스트하여 MAC 주소를 수집합니다. 
              이후에는 MAC 주소 테이블에 해당 MAC 주소와 포트 정보를 저장하고 사용합니다.
              
              MAC 주소         포트
              ---------------------
              00:1A:2B:3C:4D:5E   1
              08:76:5C:4B:3A:2D   2
              1A:2B:3C:4D:5E:6F   3
  
      
          3) 포트 간 데이터 전달
        
            - 스위치는 데이터 패킷을 수신하면 해당 패킷의 목적지 MAC 주소를 확인합니다.
            - 목적지 MAC 주소가 MAC 주소 테이블에 있고, 해당 주소가 어느 포트에 연결되어 있는지 알면 스위치는 해당 포트로 패킷을 전달합니다. 이로써 패킷은 목적지 디바이스로 바로 전송됩니다.
            - 목적지 MAC 주소가 MAC 주소 테이블에 없는 경우에는 패킷을 모든 포트로 브로드캐스트하여 목적지 디바이스의 응답을 기다리게 됩니다.
            
          4) 브로드캐스트와 플러딩
      
             - 목적지 MAC 주소를 모르는 경우나 브로드캐스트 패킷을 처리해야 할 때 스위치는 패킷을 모든 포트로 전달합니다. 이를 "플러딩(flooding)"이라고 합니다.
             - 플러딩은 네트워크 트래픽을 늘릴 수 있지만, 스위치가 목적지 MAC 주소를 학습하면 플러딩이 감소하고 효율성이 향상됩니다.
  
  
  
  3) 라우터 (Router)

    - 인터넷을 할 수 있게 해 주는 장비입니다.

    - 서로 다른 네트워크들 간에 통신을 할 수 있게 해 주는 장비입니다.

    - 다른 네트워크로 가기 위한 게이트웨이입니다.
   
  
    
    라우터의 특징 및 역할
  
      1) 라우팅
      
         - 라우터는 라우팅 테이블을 가지고 최적의 경로를 선택하여 패킷을 전달합니다. 이를 라우팅이라고 합니다.

         - 모든 컴퓨터들은 자신의 네트워크(로컬 네트워크) 또는 다른 네트워크와 통신을 하기 위해서 라우팅 테이블을 가지고 있습니다.
    
      2) 서브넷 간 통신
    
         - LAN에서 다른 네트워크와의 통신(이더넷으로 연결이 가능한 같은 지역에 있을때)은 일반적으로 Layer3 스위치를 이용하고 외부 WAN 과의 통신을 위해서는 라우터가 필요합니다.
    
     
      3) NAT (Network Address Translation)
        
         - 라우터는 네트워크 주소 변환을 수행하여 내부 네트워크의 개별 디바이스가 공인 IP 주소와 통신할 수 있도록 합니다. 이는 여러 디바이스가 하나의 공인 IP 주소를 공유하는 경우에 사용됩니다.
  
         - 출발지 주소 또는 포트 변환

    
      4) 계층 3 장비
     
        - 라우터는 OSI 모델에서 네트워크 레이어(레이어 3)에서 동작하며, IP 주소와 관련된 패킷 라우팅을 수행합니다.

--------------------------------------------------------------------------------------------------------------------------------------------------------


프로토콜 (Protocol)이란

  - 네트워크 장비와 더불어 서로간의 통신을 위해 프로토콜이 필요합니다.

  - 컴퓨터나 통신 장비에서 메시지를 주고 받기 위한 일련의 규칙 체계 (통신 규약)
  
    - 한국어, 영어 - 프로토콜
    - 대화하는 것 : 통신
    - 대화 내용 : 데이터
  
  - 서로 간 통신을 위해서는 반드시 프로토콜이 일치해야 합니다.

  - 대표적인 프로토콜은 TCP/IP 입니다.





컴퓨터 통신 초기

  - 프로토콜이 표준화가 중요하지 않았기 때문에 제조업체별 독자적으로 프로토콜을 구현하거나 사용하고 있었습니다.  
    그렇다 보니 각 업체의 프로토콜들이 서로 호환되지 않아 통신이 불가능하는 문제가 발생했습니다.
  

  사용자의 피로감 누적

    - 특정 브랜드 제품 구매 시 해당 제품만 사용해야 했고 제조업체가 없어지거나 새로운 제품 출시되면 모든 기기를 교체해야 하는 문제가 발생했습니다.    
      이러한 문제를 해결하기 위해서 프로토콜 표준화가 필요하게 되었습니다.
    

프로토콜 (Protocol)의 표준화

  - ISO (국제 표준화 기구)는 이기종 시스템간에 원할한 통신을 위해 1984년에 OSI 참조 모델을 개발했습니다.


OSI 참조 모델

  - 이 모델은 네트워크 통신과정을 일곱 개의 계층으로 분할하여 각 계층이 특정한 역할과 책임을 갖도록 정의하였습니다. 
  - 각 계층은 상위 및 하위 계층과 표준화된 인터페이스를 통해 통신하므로 데이터가 계층 간에 어떻게 전달되고 변환되는지를 이해하기 쉽습니다.



OSI 참조 모델 계층화의 장점
  
  
  1) 모듈화된 구조: 각 계층은 독립적으로 동작하고 데이터를 처리합니다. 이로 인해 각 계층의 동작을 개별적으로 분석할 수 있으며, 통신 흐름을 계층별로 이해하고 문제 해결을 수행하기 용이합니다.  
  2) 계층 간 인터페이스: 각 계층은 상위 계층과 하위 계층 간의 표준화된 인터페이스를 제공합니다. 이로써 데이터가 계층 간에 어떻게 전달되고 변환되는지를 이해하기 쉽습니다.  
  3) 문제 식별과 분리: OSI 모델을 통해 어떤 계층에서 문제가 발생했는지 식별하기 쉽습니다. 예를 들어, 전송 계층에서 발생한 문제와 네트워크 계층에서 발생한 문제를 구분하여 처리할 수 있습니다.  
  4) 표준화와 상호 운용성: 각 계층은 표준화된 프로토콜과 인터페이스를 사용하여 다른 시스템 및 네트워크와 상호 운용성을 제공합니다. 이로써 다양한 기기 및 네트워크 간에 통신이 가능해집니다.  
  5) 네트워크 설계와 확장성: OSI 모델은 새로운 기술이나 서비스를 추가하거나 기술을 업그레이드하기 쉽도록 설계되었습니다. 새로운 기술이나 서비스는 해당하는 계층에 추가될 수 있으며, 네트워크 설계와 확장성을 향상시킵니다.
  
 
  
  
[OSI 참조 모델]

  - 네트워크 통신을 이해하기 위해서는 OSI 참조 모델을 이해하는 것이 중요합니다.
    
    7 Layer : Aplication 
    6 Layer : Presentation
    5 Layer : Session                           컴퓨터 측면의 응용 서비스 (5 ~ 7)
    4 Layer : Transport
    3 Layer : Network
    2 Layer : Data link
    1 Layer : Physical                          통신 측면의 데이터 전달 서비스 (1 ~ 4) 


  7 Layer : Application 
  
    - 사용자 인터페이스를 제공하며 사용자와 네트워크 응용 프로그램(웹 브라우저) 간에 상호 작용을 지원하는 계층입니다.
  
    [예시]
  
      - 사용자가 웹 브라우저(응용 프로그램)에서 웹 페이지를 요청하면 웹 브라우저는 HTTP 요청 메시지 생성하고 하위 계층(Presenttion Layer)에 전달합니다.
    
      - FTP : 파일 전송 프로토콜
      - SMTP : 메일 전송 프로토콜
      - SSH : 암호화 원격 접속
      - HTTP, HTTPS : 웹 통신 프로토콜
  
  
  6 Layer : Presentation   

    - 네트워크로 송신할 데이터의 형식 결정
  
    1) 데이터 형식 변환
 
        - 송신측의 데이터 형식을 수신측에서 정확히 파악해야 제대로 데이터를 재현할 수 있기 때문에 데이터 형식 변환이 필요합니다.
    
    2) 암호화 및 복호화 :  데이터를 보안적으로 안전하게 전송하기 위해서  암호화 및 복호화 작업을 수행할 수 있다.
    
    3) 데이터 압축 기능 지원 : 데이터를 압축하여 전송 효율을 높일 수 있습니다.
  
    [예시]
    
      - 웹에서는 주로 HTTP 헤더 등의 데이터 형식 변환을 처리합니다.
  
      1) Content-Type 헤더
  
         - 서버가 클라이언트에게 전송하는 데이터의 형식을 나타냅니다. 
         - 이 헤더는 클라이언트에게 어떤 종류의 데이터를 받을 것인지 알려줍니다.   
         - 예시: Content-Type: text/html; charset=UTF-8 : 서버가 HTML 형식의 데이터를 UTF-8 문자 인코딩으로 보내고 있음을 나타냅니다.
      
      2) Accept 헤더
      
         - 클라이언트가 서버로부터 받기 원하는 데이터 형식을 나타냅니다. 
         - 클라이언트가 원하는 형식에 따라 서버는 적절한 데이터 형식으로 응답을 생성합니다.    
         - 예시: Accept: application/json, text/plain, */* : 클라이언트는 JSON 형식의 데이터를 우선적으로 원하며, 그 다음으로는 plain text 형식의 데이터를 받을 수 있음을 나타냅니다.
  

  5 Layer : Session
  
   - 세션 연결의 설정과 해제 즉, 데이터 통신의 시작과 종료를 정의한다.
   - 송 수신 장치 간 세션을 맺음으로써 데이터를 주고 받기 위한 논리적인 통로를 확보하는 계층이다.
   - 세션으로 전달되는 데이터의 가장 큰 특징은 데이터 열의 중간 중간에 동기화 지점(SYN)이 삽입되어 있는 것이다.
     송신 측과 수신 측 사이에서 세션이 끊기거나 데이터 전송 도중 오류가 발생했을 때 삽입한 SYN 포인트를 기준으로 세선을 재 동기화 하거나 오류 발생 부분을 복구하기 위한 것이다.
     세션 동기화는 사용자 세션 데이터의 일관성과 지속성을 보장할 수 있습니다.
  
     |    | sync |     | sync |    | sync |    | sync | 헤더 |   
  
     
  세션이란?
  
       - 포트 번호를 기반으로 통신의 시작과 종료를 정의하는 것이다.
       
  
                                           네트워크 통신 (세션)
  클라이언트 (웹 브라우저)  ------------------------------------------------------------  Http Server (80 Port 번호)
  랜덤하게 포트 번호가 할당됨
  
                            [서버 - 클라이언트 구조에서 포트 번호로 구분되는 세션 정보]





  4 Layer : Transport 


    1) 데이터 분할 : 전송 계층은 상위 계층에서 받은 데이터를 세그먼트로 분할합니다. 
  
    2) 포트 번호 지정 : 세그먼트에는 출발지와 목적지 포트 번호가 포함됩니다.이 포트 번호를 사용하여 전송 계층은 세션 간에 데이터를 응용 프로그램으로 전달합니다. 
  
    3) 오류 검출 및 복구 : 전송 계층은 세그먼트에 오류 검출 코드를 추가하여 데이터 무결성을 확인합니다. 만약 세그먼트에 오류가 발견되면, 오류를 복구하거나 재전송을 요청합니다. 이를 통해 데이터의 신뢰성을 보장합니다.    

    4) 흐름 제어 : 세그먼트의 전송 속도를 조절하여 효율적인 통신을 가능하게 합니다. 데이터 송수신 간의 흐름 제어 메커니즘이 구현되어 있어, 송신측이 수신측의 처리 속도를 초과하지 않도록 조절할 수 있습니다.

    5) 세션 관리 : 전송 계층은 통신 세션의 설정 및 해제를 관리합니다. 세션 설정 단계에서는 연결을 수립하고, 세션 해제 단계에서는 연결을 종료합니다.
       
    6) L4 스위치 (Layer 4 Switch) : 포트 기반의 로드 밸런싱, 포트 포워딩 및 TCP/UDP 흐름 제어와 같은 기본적인 트래픽 관리 작업을 수행합니다
  
    6) 대표 프로토콜 : TCP, UDP


    포트 포워딩 (Port Forwarding) 이란
    
      - L4 스위치는 외부에서 내부 서버로 트래픽을 전달하는 데 사용될 수 있습니다. 

      - 예를 들어, 인터넷에서 내부 웹 서버로 HTTP 트래픽을 전달하기 위해 L4 스위치는 외부 포트 (예: 80)와 내부 서버의 포트 (예: 8080) 간의 포트 포워딩 설정을 가질 수 있습니다. 
       
        이렇게 설정된 L4 스위치는 외부에서 오는 HTTP 요청을 내부 서버로 전달하여 웹 서비스를 제공합니다.
  


 
3 Layer : Network Layer

  - 논리적인 IP (Internet Protocol) 주소를 사용하여 데이터를 목적지까지 전달하는 계층입니다.

  - 네트워크 계층에서의 데이터는 전송 계층에서 전달된 세그먼트 앞에 헤더 정보가 붙어 패킷으로 정의된 데이터를 말합니다.

  - 패킷의 헤더 정보에는 데이터의 출발지와 목적지 IP 주소가 포함됩니다.
  
  - 라우터는 수신한 데이터 패킷의 목적지 IP 주소를 확인하고, 최적의 경로를 선택하여 데이터를 다음 목적지로 전달합니다. 라우팅 테이블을 사용하여 다른 네트워크로 패킷을 라우팅합니다.

  - 대표 프로토콜 : IP, ARP, ICMP


2 Layer : Data Link 

  - 물리적인 주소인 MAC 주소를 사용하여 데이터를 목적지 까지 전달하는 계층입니다.

  - 데이터 링크 계층에서의 데이터는 네트워크 계층에서 전달된 패킷 앞에 헤더와 트레일러(데이터 프레임의 오류 검출) 정보가 붙어 프레임으로 정의된 데이터를 말합니다.

  - 프레임의 헤더 정보에는 데이터의 출발지와 목적지 MAC 주소가 포함됩니다.

  - 에러 검출과 물리적인 흐름 제어를 담당하고, 오료 검출 시 4계층에서 해당 에러를 수정합니다.

  - 스위치는 데이터 프레임을 받아서 목적지 주소를 기반으로 프레임을 전달하는 역할을 합니다. 이를 스위칭이라고 합니다



1 Layer : Physical 

  - 데이터 프레임을 전기 신호(0과 1로 구성된 비트 단위의 디지털 신호)로 변환하여 전송 채널을 통해서 수신 측의 물리 계층으로 전달합니다.

  - 리피터 (Repeater)

    - 데이터 신호를 증폭하고 전파를 연장하여 네트워크의 범위를 확장합니다. 데이터를 이동하는 데 사용되며, 물리적인 신호의 감쇠를 보상하여 장거리 통신을 가능하게 합니다. 주로 광케이블 또는 동축 케이블을 사용하는 이더넷 네트워크에서 사용됩니다.

  - 케이블 및 연결 장비: 물리 계층에서는 다양한 종류의 케이블과 연결 장비가 사용됩니다. 예를 들어, 이더넷 케이블, 광섬유 케이블, 코넥터, 패치 패널 등이 포함됩니다. 이러한 장비와 케이블은 신호를 전달하고 물리적인 연결을 관리하는 데 사용됩니다.

  - 허브 (Hub): 네트워크에서 데이터의 전송을 단순하게 중계하는 역할을 합니다. 수신한 데이터는 연결된 모든 포트로 브로드캐스트됩니다. 



7개의 계층이 어떻게 이동할까요?

  - 송신측 입장에서는 상위 계층에서 하위 계층으로, 수신측 입장에서는 하위 계층에서 상위 계층으로 데이터가 이동되면서 통신을 하게 됩니다.































